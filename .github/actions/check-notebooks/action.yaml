name: process-notebooks
description: 'Run processing of notebooks'
inputs:
  run_all:
    description: 'run all notebooks or only changed'
    required: true
    type: string
  exec_flag:
    description: 'flag for execution'
    required: true
    type: string
  exercise-continue-on-error:
    description: 'Should continue on Error in exercices'
    required: false
    default: false
    type: string
  cdsapi_uid:
    description: 'CDSAPI UID'
    required: true
  cdsapi_key:
    description: 'CDSAPI Key'
    required: true

runs:
  using: composite
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        persist-credentials: false
        fetch-depth: 0
        ref: ${{ github.head_ref }}

    - name: Get commit message
      run: |
        readonly local msg=$(git log -1 --pretty=format:"%s")
        echo "COMMIT_MESSAGE=$msg" >> $GITHUB_ENV
      shell: bash -l {0}

    - name: Setup
      uses: ./.github/actions/setup
      with:
        force_env_update: 'true'

    # - name: Get changed files
    #   if: ${{ inputs.runall != 'true' }}
    #   id: changes
    #   uses: trilom/file-changes-action@v1.2.4
    #   with:
    #     output: " "

    - name: Get changed files
      if: "!contains(env.COMMIT_MESSAGE, 'skip ci')"
      id: changed-files
      uses: tj-actions/changed-files@v35
      with:
        files_ignore: projects/archive/*

    - name: List all changed files
      run: |
        for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
          echo "$file was changed."
        done
      shell: bash -l {0}

    - name: Get notebooks
      run: |
        if ${{ inputs.run_all == 'true' }}; then
          # nbs="tutorials/*/*Tutorial*.ipynb";
          nbs="tutorials/W1D3_*/*Tutorial*.ipynb";
          # nbs="tutorials/Projects_*/*Tutorial*.ipynb";
          # nbs="tutorials/*/*DaySummary.ipynb";
        else
          nbs=`python ci/select_notebooks.py ${{ steps.changed-files.outputs.all_changed_files }}`;
          # nbs=`python ci/select_notebooks.py ${{ steps.changes.outputs.files }}`;
        fi
        echo "NBS=$nbs" >> $GITHUB_ENV
      shell: bash -l {0}

    - name: Install XKCD fonts
      run: |
        sudo apt-get update -yq
        sudo sh -c "echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | debconf-set-selections"
        sudo apt-get install msttcorefonts -qq
        rm -f $HOME/.matplotlib/fontList.cache
      shell: bash -l {0}

    - name: Process notebooks
      id: process_notebooks
      if: ${{ env.NBS != '' }}
      run: |
        # process notebooks
        # add cdsapi credentials for projects
        echo "url: https://cds.climate.copernicus.eu/api/v2" >> /home/runner/.cdsapirc
        echo "key: ${{ inputs.cdsapi_uid }}:${{ inputs.cdsapi_key }}" >> /home/runner/.cdsapirc
        # add helper functions to main dir
        cp tutorials/W2D3_ExtremesandVariability/gev_functions.py  tutorials/W2D3_ExtremesandVariability/sdfc_classes.py  tutorials/W2D3_ExtremesandVariability/extremes_functions.py .
        python ci/process_notebooks.py ${{ env.NBS }} ${{ inputs.exec_flag}}
      shell: bash -l {0}

    - name: verify exercises
      # continue-on-error: ${{ inputs.exercise-continue-on-error }}
      continue-on-error: ${{ true }}
      if: ${{ env.NBS != '' }}
      id: verify_exercises
      run: |
        pip install fuzzywuzzy
        python ci/verify_exercises.py ${{ env.NBS }} --c "$COMMIT_MESSAGE"
      shell: bash -l {0}

    - name: make PR comment notebooks
      id: pr_comment
      if: ${{ env.NBS != '' }}
      run: |
        branch=${{ github.event.pull_request.head.ref }}
        python ci/make_pr_comment.py ${{ env.NBS }} --branch $branch --o comment.txt
      shell: bash -l {0}
